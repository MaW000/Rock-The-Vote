{"ast":null,"code":"var _jsxFileName = \"/home/maw/prod/LVL6/RTV2/client/src/components/Public/components/comments.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useContext, useState, useEffect } from 'react';\nimport { UserContext } from '../../../context/UserProvider.js';\nimport SingleComment from './singleComment.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Comments(props) {\n  _s();\n\n  const {\n    userAxios\n  } = useContext(UserContext);\n  const [commentLists, setCommentLists] = useState([]);\n  const [showComments, setShowComments] = useState(true);\n  const variable = {\n    issueId: props.issueId\n  };\n\n  const ShowComments = () => {\n    setShowComments(!showComments);\n  };\n\n  useEffect(() => {\n    console.log(variable);\n    axios.post('/comment/getComments', {\n      variable\n    }).then(response => {\n      if (response.data.success) {\n        console.log('response.data.comments', response.data.comments);\n        setCommentLists(response.data.comments);\n      } else {\n        alert('Failed to get video Info');\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showComments ? /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: ShowComments,\n      style: {\n        cursor: 'pointer'\n      },\n      children: \"Show Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }, this) : commentLists.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SingleComment, {\n        comment: comment,\n        postId: props.postId,\n        refreshFunction: props.refreshFunction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: ShowComments,\n        style: {\n          cursor: 'pointer'\n        },\n        children: \"Close Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n}\n\n_s(Comments, \"qO4suLfeuw1FapcMh4GAqSJIaHI=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["axios","React","useContext","useState","useEffect","UserContext","SingleComment","Comments","props","userAxios","commentLists","setCommentLists","showComments","setShowComments","variable","issueId","ShowComments","console","log","post","then","response","data","success","comments","alert","cursor","map","comment","index","postId","refreshFunction"],"sources":["/home/maw/prod/LVL6/RTV2/client/src/components/Public/components/comments.js"],"sourcesContent":["import axios from 'axios'\r\nimport React, { useContext,useState , useEffect } from 'react'\r\nimport { UserContext } from '../../../context/UserProvider.js'\r\nimport SingleComment from './singleComment.js'\r\n\r\nfunction Comments(props) {\r\n    const { userAxios } = useContext(UserContext)\r\n    const [commentLists, setCommentLists] = useState([])\r\n    const [showComments, setShowComments] = useState(true)\r\n    const variable = {\r\n        issueId: props.issueId\r\n    }\r\n    const ShowComments = () => {\r\n        setShowComments(!showComments)\r\n    }\r\n    useEffect(() => {\r\n        console.log(variable)\r\n        axios.post('/comment/getComments', {variable})\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log('response.data.comments',response.data.comments)\r\n                    setCommentLists(response.data.comments)\r\n                } else {\r\n                    alert('Failed to get video Info')\r\n                }\r\n            })\r\n    }, [])\r\n    \r\n  return (\r\n    <>  \r\n        {showComments ? <p onClick={ShowComments} style={{cursor: 'pointer'}}>Show Comments</p>: commentLists.map((comment, index) => (\r\n            <div>\r\n                <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                <p onClick={ShowComments} style={{cursor: 'pointer'}}>Close Comments</p>\r\n            </div>\r\n        ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Comments"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA2BC,QAA3B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACrB,MAAM;IAAEC;EAAF,IAAgBP,UAAU,CAACG,WAAD,CAAhC;EACA,MAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,IAAD,CAAhD;EACA,MAAMW,QAAQ,GAAG;IACbC,OAAO,EAAEP,KAAK,CAACO;EADF,CAAjB;;EAGA,MAAMC,YAAY,GAAG,MAAM;IACvBH,eAAe,CAAC,CAACD,YAAF,CAAf;EACH,CAFD;;EAGAR,SAAS,CAAC,MAAM;IACZa,OAAO,CAACC,GAAR,CAAYJ,QAAZ;IACAd,KAAK,CAACmB,IAAN,CAAW,sBAAX,EAAmC;MAACL;IAAD,CAAnC,EACKM,IADL,CACUC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;QACvBN,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqCG,QAAQ,CAACC,IAAT,CAAcE,QAAnD;QACAb,eAAe,CAACU,QAAQ,CAACC,IAAT,CAAcE,QAAf,CAAf;MACH,CAHD,MAGO;QACHC,KAAK,CAAC,0BAAD,CAAL;MACH;IACJ,CARL;EASH,CAXQ,EAWN,EAXM,CAAT;EAaF,oBACE;IAAA,UACKb,YAAY,gBAAG;MAAG,OAAO,EAAEI,YAAZ;MAA0B,KAAK,EAAE;QAACU,MAAM,EAAE;MAAT,CAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAH,GAA4EhB,YAAY,CAACiB,GAAb,CAAiB,CAACC,OAAD,EAAUC,KAAV,kBACtG;MAAA,wBACI,QAAC,aAAD;QAAe,OAAO,EAAED,OAAxB;QAAiC,MAAM,EAAEpB,KAAK,CAACsB,MAA/C;QAAuD,eAAe,EAAEtB,KAAK,CAACuB;MAA9E;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAG,OAAO,EAAEf,YAAZ;QAA0B,KAAK,EAAE;UAACU,MAAM,EAAE;QAAT,CAAjC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADqF;EAD7F,iBADF;AAUD;;GAjCQnB,Q;;KAAAA,Q;AAmCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}